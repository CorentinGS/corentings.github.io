---
import '../styles/global.css'
import type { CollectionEntry } from 'astro:content'
import type { MarkdownHeading } from 'astro'

import { Image } from 'astro:assets'
import FormattedDate from '../components/blog/FormattedDate.astro'
import Tag from '../components/blog/Tag.astro'
import BaseHead from '../components/utils/BaseHead.astro'
import Footer from '../components/utils/Footer.astro'
import { Header } from '../components/navigation/Header'

interface Props {
	id: CollectionEntry<'blog'>['id']
	data: CollectionEntry<'blog'>['data']
	headings: MarkdownHeading[]
	readTime: string
}

const { data, readTime, headings, id } = Astro.props
const { title, description, pubDate, heroImage, tags } = data

const currentPath = Astro.url.pathname
const articleDate = pubDate.toISOString()

// Generate keywords from tags
const keywords = tags.map((tag) => tag.toLowerCase())
---

<!doctype html>
<html lang='en' class='scroll-smooth'>
	<head>
		<BaseHead
			title={title}
			description={description}
			ogImage={heroImage?.src}
			articleDate={articleDate}
			type='article'
			keywords={keywords}
		/>
	</head>
	<body class='flex h-full bg-zinc-100 dark:bg-zinc-900'>
		<div class='flex w-full'>
			<div class='relative flex w-full flex-col'>
				<Header client:load currentPath={currentPath} />

				<main id='main-content' class='flex-auto'>
					<article
						class='prose prose-zinc dark:prose-invert mx-auto mt-12 max-w-(--breakpoint-lg) px-6 lg:px-8'
						aria-labelledby='article-title'
					>
						<header class='mb-8 text-center'>
							<div class='flex flex-col gap-4'>
								<div
									class='flex items-center justify-center gap-2 text-sm text-zinc-600 dark:text-zinc-400'
								>
									<time datetime={articleDate}>
										Published <FormattedDate date={pubDate} />
									</time>
									<span aria-hidden='true'>â€¢</span>
									<span>{readTime}</span>
								</div>

								<h1
									id='article-title'
									class='text-4xl font-semibold tracking-tight text-zinc-900 dark:text-zinc-100 sm:text-5xl'
								>
									{title}
								</h1>

								<div class='flex flex-wrap justify-center gap-3'>
									{tags.map((tag) => <Tag tag={tag} />)}
								</div>
							</div>
						</header>

						{
							heroImage && (
								<figure class='my-8'>
									<Image
										src={heroImage}
										width={1200}
										height={630}
										quality={80}
										loading='eager'
										class='rounded-2xl aspect-2/1 object-cover'
										alt={`Cover image for ${title}`}
									/>
								</figure>
							)
						}

						<hr class='my-8 border-zinc-200 dark:border-zinc-800' />

						<div class='prose-content'>
							<slot />
						</div>
					</article>
				</main>

				<Footer />
			</div>
		</div>
	</body>
</html>
