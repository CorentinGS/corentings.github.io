---
export const prerender = true
import BlogPostLayout from 'src/layouts/BlogPostLayout.astro'
import { type CollectionEntry, getCollection } from 'astro:content'
import ListRelatedPosts from '@/components/blog/ListRelatedPosts'
import { getPosts } from '@/utils'
import SButton from '@/components/mdx/SButton'
import Code from '@/components/mdx/Code'

const posts = await getCollection('blog')
export async function getStaticPaths() {
	const posts = await getPosts()
	return posts.map((post) => ({
		params: { slug: post.slug },
		props: post
	}))
}
type Props = CollectionEntry<'blog'>
const post = Astro.props
const MAX_POSTS = 3
const getRelatedPosts = (post: Props) => {
	const lowercaseTags = post.data.tags.map((tag) => tag.toLowerCase())
	const relatedPosts = posts.filter(
		(p) => p.slug !== post.slug && p.data.tags.some((t) => lowercaseTags.includes(t.toLowerCase()))
	)
	return relatedPosts.slice(0, MAX_POSTS)
}
const relatedPosts = getRelatedPosts(post)
const { Content, headings, remarkPluginFrontmatter } = await post.render()
---

<BlogPostLayout
	id={post.id}
	data={post.data}
	headings={headings}
	readTime={remarkPluginFrontmatter.minutesRead}
>
	<div class='mt-8'>
		<!-- post -->
		<article class='max-w-full w-full'>
			<div class='prose prose-lg md:prose-xl dark:prose-invert mb-12 min-w-full md:text-justify'>
				<Content components={{ pre: Code, SButton }} />
			</div>

			<!-- related posts -->
			<footer>
				<h2 class='font-bold text-lg text-zinc-800 dark:text-zinc-100 mb-6'>Related articles</h2>
				<ListRelatedPosts posts={relatedPosts} />
			</footer>
		</article>
	</div>
</BlogPostLayout>
