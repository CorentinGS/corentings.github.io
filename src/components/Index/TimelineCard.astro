---
import { TimelineCardType } from "../../../utils/types";
import { Picture, Image } from "@astrojs/image/components";
import LucideChevronRight from "~icons/lucide/chevron-right";

interface Props {
  name: string;
  description: string;
  image?: string;
  end_date?: string;
  start_date: string;
  link?: string;
  location?: string;
  right?: boolean;
  tools?: string;
  type?: TimelineCardType;
}
const {
  name,
  description,
  image,
  link,
  start_date,
  end_date,
  location,
  type,
  tools,
  right,
} = Astro.props;

let classContent = (right? "border-l-[6px] ": "border-l-[6px] md:border-r-[6px] md:border-l-[0px] ") + (type === TimelineCardType.School 
      ? "border-primary"
      : type === TimelineCardType.Work
      ? "border-secondary"
      : type === TimelineCardType.Course
      ? "border-success"
      : "border-accent");
---

<div
  class={classContent +
    " hoveranimation order-1 w-10/12 transform-gpu rounded-lg bg-base-200 px-6 py-4 shadow-xl hover:skew-y-2 hover:skew-x-2 hover:shadow-2xl md:w-5/12"}
>
  <div class="justify-between sm:flex">
    <div>
      <div class="flex">
      <h3 class="text-xl font-bold capitalize">
        {name}
      </h3>
      {
        image != null ? (
          <a
            href={link}
            class="ml-3 flex-shrink-0 sm:hidden"
            rel="noopener noreferrer nofollow"
            target="_blank"
          >
            <Picture
              alt={name}
              src={image}
              class="h-10 w-10 rounded-lg object-cover shadow-sm"
              formats={["avif", "webp", "png"]}
              loading="lazy"
              widths={[40, 64, 128]}
              sizes="(max-width: 64px) 40px, 64px"
              aspectRatio={1/1}
            />
          </a>
        ) : null
      }
      </div>
      <div class="mt-1 flex flex-row text-xs font-medium md:text-sm">
        {
          end_date != null ? (
            <p>
              {start_date} ・ {end_date}
            </p>
          ) : (
            <p>Since {start_date}</p>
          )
        }
        {location != null ? <p>・{location}</p> : null}
      </div>
      {
        tools != null ? (
          <div class="mb-2 flex">
            <p class="text-xs font-medium uppercase md:text-sm">Skills</p>
            <LucideChevronRight />
            <p class="text-xs font-medium md:text-sm">{tools}</p>
          </div>
        ) : null
      }
    </div>
    {
      image != null ? (
        <a
          href={link}
          class="ml-3 hidden flex-shrink-0 sm:block"
          rel="noopener noreferrer nofollow"
          target="_blank"
        >
        <Picture
              alt={name}
              src={image}
              class="h-12 w-12 lg:h-16 lg:w-16 rounded-lg object-cover shadow-sm"
              formats={["avif", "webp", "png"]}
              loading="lazy"
              widths={[40, 64, 128]}
              sizes="(max-width: 128px) 64px, 128px"
              aspectRatio={1/1}
          />
        </a>
      ) : null
    }
  </div>
  <p class="text-sm leading-snug tracking-wide">
    {description}
  </p>
</div>
